"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeSafeAreaContext = require("react-native-safe-area-context");

var _index = require("../index");

var _service = require("../service");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Root = ({
  theme,
  colors,
  children,
  dialogConfig,
  toastConfig
}) => {
  const colorScheme = (0, _reactNative.useColorScheme)();
  const safeAreaInsetsContext = (0, React.useContext)(_reactNativeSafeAreaContext.SafeAreaInsetsContext);
  _service.Color.colorsCustom = colors;
  const isDark = (theme !== null && theme !== void 0 ? theme : colorScheme) === 'dark';

  if (safeAreaInsetsContext === null) {
    return /*#__PURE__*/React.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, null, /*#__PURE__*/React.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React.createElement(_index.Dialog, {
      ref: _index.Dialog.instance,
      isDark: isDark,
      config: dialogConfig
    }), /*#__PURE__*/React.createElement(_index.Toast, {
      ref: _index.Toast.instance,
      isDark: isDark,
      config: toastConfig
    }), children));
  }

  return (
    /*#__PURE__*/
    // eslint-disable-next-line react-native/no-inline-styles
    React.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React.createElement(_index.Dialog, {
      ref: _index.Dialog.instance,
      isDark: isDark,
      config: dialogConfig
    }), /*#__PURE__*/React.createElement(_index.Toast, {
      ref: _index.Toast.instance,
      isDark: isDark,
      config: toastConfig
    }), children)
  );
};

var _default = Root;
exports.default = _default;
//# sourceMappingURL=Root.js.map