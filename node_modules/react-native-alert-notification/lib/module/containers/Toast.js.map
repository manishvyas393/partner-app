{"version":3,"sources":["Toast.tsx"],"names":["React","Animated","Image","Pressable","StyleSheet","Text","View","SafeAreaInsetsContext","ENV","ACTION","ALERT_TYPE","getImage","Color","Toast","Component","constructor","props","context","prevProps","isDark","setState","prevState","styles","__styles","args","state","visible","_timeout","clearTimeout","_startAnimation","CLOSE","_positionToast","Value","Promise","resolve","config","OPEN","autoClose","undefined","duration","AUTO_CLOSE","setTimeout","_close","onShow","onHide","action","timing","toValue","top","_cardHeight","useNativeDriver","start","type","title","textBody","onPress","onLongPress","nativeEvent","layout","height","flatten","cardRow","transform","translateY","cardContainer","backendImage","image","overflow","flex","titleLabel","descLabel","_CardRender","cardHeight","createRef","instance","current","_open","create","backgroundContainer","absoluteFillObject","backgroundColor","container","position","left","right","zIndex","flexDirection","borderRadius","paddingHorizontal","paddingTop","paddingBottom","marginHorizontal","marginBottom","get","fontWeight","fontSize","color","alignSelf","width","aspectRatio","marginRight","SUCCESS","tintColor","DANGER","WARNING"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,IAAjD,EAAuDC,IAAvD,QAAmE,cAAnE;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,OAAOC,GAAP,IAAcC,MAAd,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AA0BA,MAAMC,KAAN,SAAoBb,KAAK,CAACc,SAA1B,CAAoD;AAClD;AACF;AACA;;AAGE;AACF;AACA;;AAGE;AACF;AACA;;AAKE;AACF;AACA;;AAKE;AACF;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAgBC,OAAhB,EAA0E;AACnF,UAAMD,KAAN,EAAaC,OAAb;;AADmF;;AAAA;;AAAA;;AAAA;;AAAA,gDAcxDC,SAAD,IAAuC;AACjE,UAAIA,SAAS,CAACC,MAAV,KAAqB,KAAKH,KAAL,CAAWG,MAApC,EAA4C;AAC1C;AACA,aAAKC,QAAL,CAAeC,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5BC,UAAAA,MAAM,EAAEC,QAAQ,CAAC,KAAKP,KAAL,CAAWG,MAAZ;AAFY,SAAhB,CAAd;AAID;AACF,KAtBoF;;AAAA,mCA4BrE,MAAOK,IAAP,IAAwC;AAAA;;AACtD,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,YAAI,KAAKC,QAAT,EAAmB;AACjBC,UAAAA,YAAY,CAAC,KAAKD,QAAN,CAAZ;AACD;;AACD,cAAM,KAAKE,eAAL,CAAqBpB,MAAM,CAACqB,KAA5B,CAAN;AACD;;AACD,WAAKC,cAAL,GAAsB,IAAI9B,QAAQ,CAAC+B,KAAb,CAAmB,CAAC,GAApB,CAAtB;AACA,YAAM,IAAIC,OAAJ,CAAmBC,OAAD,IAAa,KAAKd,QAAL,CAAeC,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBK,QAAAA,OAAO,EAAE,IAAzB;AAA+BS,QAAAA,MAAM,EAAEX;AAAvC,OAAhB,CAAd,EAA8EU,OAA9E,CAA/B,CAAN;AACA,YAAM,KAAKL,eAAL,CAAqBpB,MAAM,CAAC2B,IAA5B,CAAN;AAEA,YAAMC,SAAS,GAAG,4BAAKZ,KAAL,CAAWU,MAAX,0EAAmBE,SAAnB,MAAiCC,SAAjC,0BAA6C,KAAKb,KAAL,CAAWU,MAAxD,wDAA6C,oBAAmBE,SAAhE,yBAA4E,KAAKrB,KAAL,CAAWmB,MAAvF,uDAA4E,mBAAmBE,SAAjH;;AACA,UAAIA,SAAS,IAAIA,SAAS,KAAKC,SAA/B,EAA0C;AACxC,cAAMC,QAAQ,GAAG,OAAOF,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4C7B,GAAG,CAACgC,UAAjE;AACA,aAAKb,QAAL,GAAgBc,UAAU,CAAC,MAAM,KAAKC,MAAL,EAAP,EAAsBH,QAAtB,CAA1B;AACD;;AACD,kCAAKd,KAAL,CAAWU,MAAX,qGAAmBQ,MAAnB;AACD,KA7CoF;;AAAA,oCAkDpE,YAA2B;AAAA;;AAC1C,YAAM,KAAKd,eAAL,CAAqBpB,MAAM,CAACqB,KAA5B,CAAN;AACA,YAAMc,MAAM,0BAAG,KAAKnB,KAAL,CAAWU,MAAd,wDAAG,oBAAmBQ,MAAlC;AACA,YAAM,IAAIV,OAAJ,CAAmBC,OAAD,IAAa,KAAKd,QAAL,CAAeC,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBK,QAAAA,OAAO,EAAE,KAAzB;AAAgCS,QAAAA,MAAM,EAAEG;AAAxC,OAAhB,CAAd,EAAoFJ,OAApF,CAA/B,CAAN;AACAU,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM;AACP,KAvDoF;;AAAA,6CA6D1DC,MAAD,IAAmC;AAC3D,aAAO,IAAIZ,OAAJ,CAAaC,OAAD,IAAa;AAAA;;AAC9BjC,QAAAA,QAAQ,CAAC6C,MAAT,CAAgB,KAAKf,cAArB,EAAqC;AACnCgB,UAAAA,OAAO,EAAEF,MAAM,KAAKpC,MAAM,CAAC2B,IAAlB,yCAAyB,KAAKnB,OAA9B,kDAAyB,cAAc+B,GAAvC,iEAA8C,CAA9C,GAAkD,CAAC,KAAKC,WAD9B;AAEnCV,UAAAA,QAAQ,EAAE,GAFyB;AAGnCW,UAAAA,eAAe,EAAE;AAHkB,SAArC,EAIGC,KAJH,CAIS,MAAMjB,OAAO,EAJtB;AAKD,OANM,CAAP;AAOD,KArEoF;;AAAA,yCA0E/D,MAAmB;AACvC,YAAM;AAAEZ,QAAAA;AAAF,UAAa,KAAKG,KAAxB;;AACA,UAAI,KAAKA,KAAL,CAAWU,MAAf,EAAuB;AACrB,cAAM;AAAEiB,UAAAA,IAAF;AAAQC,UAAAA,KAAR;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA,OAAzB;AAAkCC,UAAAA;AAAlC,YAAkD,KAAK/B,KAAL,CAAWU,MAAnE;AACA,4BACE,oBAAC,QAAD,CAAU,IAAV;AACE,UAAA,QAAQ,EAAE,CAAC;AACTsB,YAAAA,WAAW,EAAE;AACXC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA;AAAF;AADG;AADJ,WAAD,KAIH,KAAKV,WAAL,GAAmBU,MAL5B;AAME,UAAA,KAAK,EAAEvD,UAAU,CAACwD,OAAX,CAAmB,CAACtC,MAAM,CAACuC,OAAR,EAAiB;AAAEC,YAAAA,SAAS,EAAE,CAAC;AAAEC,cAAAA,UAAU,EAAE,KAAKhC;AAAnB,aAAD;AAAb,WAAjB,CAAnB;AANT,wBAQE,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAET,MAAM,CAAC0C,aAAzB;AAAwC,UAAA,OAAO,EAAET,OAAjD;AAA0D,UAAA,WAAW,EAAEC;AAAvE,WACGJ,IAAI,iBACH,uDACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE9B,MAAM,CAAC2C;AAApB,UADF,eAEE,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAEtD,QAAQ,CAACyC,IAAD,CAAvB;AAA+B,UAAA,UAAU,EAAC,SAA1C;AAAoD,UAAA,KAAK,EAAEhD,UAAU,CAACwD,OAAX,CAAmB,CAACtC,MAAM,CAAC4C,KAAR,EAAe5C,MAAM,CAAE,GAAE8B,IAAK,OAAT,CAArB,CAAnB;AAA3D,UAFF,CAFJ,eAQE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEe,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,IAAI,EAAE;AAA5B;AAAb,WACGf,KAAK,iBAAI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE/B,MAAM,CAAC+C;AAApB,WAAiChB,KAAjC,CADZ,EAEGC,QAAQ,iBAAI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEhC,MAAM,CAACgD;AAApB,WAAgChB,QAAhC,CAFf,CARF,CARF,CADF;AAwBD;;AACD,0BAAO,yCAAP;AACD,KAxGoF;;AAAA,oCA6GrE,MAAmB;AACjC,YAAM;AAAE5B,QAAAA;AAAF,UAAc,KAAKD,KAAzB;AACA,YAAM;AAAE8C,QAAAA;AAAF,UAAkB,IAAxB;;AACA,UAAI,CAAC7C,OAAL,EAAc;AACZ,4BAAO,yCAAP;AACD;;AACD,0BAAO,oBAAC,WAAD,OAAP;AACD,KApHoF;;AAEnF,SAAKuB,WAAL,GAAmB,CAAnB;AACA,SAAKlB,cAAL,GAAsB,IAAI9B,QAAQ,CAAC+B,KAAb,CAAmB,CAAC,GAApB,CAAtB;AACA,SAAKP,KAAL,GAAa;AACXH,MAAAA,MAAM,EAAEC,QAAQ,CAACP,KAAK,CAACG,MAAP,CADL;AAEXO,MAAAA,OAAO,EAAE,KAFE;AAGX8C,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;AAED;AACF;AACA;;;AAjEoD;;gBAA9C3D,K,iBAIiBN,qB;;gBAJjBM,K,2BAS6Cb,KAAK,CAACyE,SAAN,E;;gBAT7C5D,K,UAckBW,IAAD,IAAyB;AAAA;;AAC5C,2BAAAX,KAAK,CAAC6D,QAAN,CAAeC,OAAf,gFAAwBC,KAAxB,CAA8BpD,IAA9B;AACD,C;;gBAhBGX,K,UAqBiB,MAAY;AAAA;;AAC/B,4BAAAA,KAAK,CAAC6D,QAAN,CAAeC,OAAf,kFAAwBjC,MAAxB;AACD,C;;AAoJH,MAAMnB,QAAQ,GAAIJ,MAAD,IACff,UAAU,CAACyE,MAAX,CAAkB;AAChBC,EAAAA,mBAAmB,EAAE,EACnB,GAAG1E,UAAU,CAAC2E,kBADK;AAEnBC,IAAAA,eAAe,EAAE;AAFE,GADL;AAMhBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETF,IAAAA,eAAe,EAAE,WAFR;AAGThC,IAAAA,GAAG,EAAE,CAHI;AAITmC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,KAAK,EAAE;AALE,GANK;AAchBvB,EAAAA,OAAO,EAAE;AACPwB,IAAAA,MAAM,EAAE,IADD;AAEPH,IAAAA,QAAQ,EAAE,UAFH;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE;AAJA,GAdO;AAqBhBpB,EAAAA,aAAa,EAAE;AACbsB,IAAAA,aAAa,EAAE,KADF;AAEbC,IAAAA,YAAY,EAAE,EAFD;AAGbC,IAAAA,iBAAiB,EAAE,EAHN;AAIbC,IAAAA,UAAU,EAAE,EAJC;AAKbC,IAAAA,aAAa,EAAE,EALF;AAMbC,IAAAA,gBAAgB,EAAE,EANL;AAObC,IAAAA,YAAY,EAAE,EAPD;AAQbZ,IAAAA,eAAe,EAAEpE,KAAK,CAACiF,GAAN,CAAU,MAAV,EAAkB1E,MAAlB;AARJ,GArBC;AAgChBkD,EAAAA,UAAU,EAAE;AACVyB,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,KAAK,EAAEpF,KAAK,CAACiF,GAAN,CAAU,OAAV,EAAmB1E,MAAnB;AAHG,GAhCI;AAqChBmD,EAAAA,SAAS,EAAE;AACT0B,IAAAA,KAAK,EAAEpF,KAAK,CAACiF,GAAN,CAAU,OAAV,EAAmB1E,MAAnB;AADE,GArCK;AAwChB8C,EAAAA,YAAY,EAAE;AACZiB,IAAAA,QAAQ,EAAE,UADE;AAEZe,IAAAA,SAAS,EAAE,QAFC;AAGZtC,IAAAA,MAAM,EAAE,EAHI;AAIZuC,IAAAA,KAAK,EAAE,EAJK;AAKZlB,IAAAA,eAAe,EAAE,SALL;AAMZO,IAAAA,YAAY,EAAE,GANF;AAOZJ,IAAAA,IAAI,EAAE,KAAK;AAPC,GAxCE;AAiDhBjB,EAAAA,KAAK,EAAE;AACL+B,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,WAAW,EAAE;AAJR,GAjDS;AAwDhB,GAAE,GAAE1F,UAAU,CAAC2F,OAAQ,OAAvB,GAAgC;AAC9BC,IAAAA,SAAS,EAAE1F,KAAK,CAACiF,GAAN,CAAU,SAAV,EAAqB1E,MAArB;AADmB,GAxDhB;AA2DhB,GAAE,GAAET,UAAU,CAAC6F,MAAO,OAAtB,GAA+B;AAC7BD,IAAAA,SAAS,EAAE1F,KAAK,CAACiF,GAAN,CAAU,QAAV,EAAoB1E,MAApB;AADkB,GA3Df;AA8DhB,GAAE,GAAET,UAAU,CAAC8F,OAAQ,OAAvB,GAAgC;AAC9BF,IAAAA,SAAS,EAAE1F,KAAK,CAACiF,GAAN,CAAU,SAAV,EAAqB1E,MAArB;AADmB;AA9DhB,CAAlB,CADF;;AAoEA,eAAeN,KAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, Image, Pressable, StyleSheet, Text, View } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport ENV, { ACTION, ALERT_TYPE } from '../config/ENV';\nimport { getImage } from '../service';\nimport Color from '../service/color';\n\nexport type IConfig = {\n  type?: ALERT_TYPE;\n  // position?: TOAST_POSITION;\n  title?: string;\n  textBody?: string;\n  autoClose?: number | boolean;\n  onPress?: () => void;\n  onLongPress?: () => void;\n  onShow?: () => void;\n  onHide?: () => void;\n};\n\ntype IProps = {\n  isDark: boolean;\n  config?: Pick<IConfig, 'autoClose'>;\n};\n\ntype IState = {\n  styles: ReturnType<typeof __styles>;\n  cardHeight: number;\n  overlayClose?: boolean;\n  visible: boolean;\n  config?: IConfig;\n};\nclass Toast extends React.Component<IProps, IState> {\n  /**\n   * @type {React.Context<EdgeInsets | null>}\n   */\n  static contextType = SafeAreaInsetsContext;\n\n  /**\n   * @type {React.RefObject<Toast>}\n   */\n  public static instance: React.RefObject<Toast> = React.createRef();\n\n  /**\n   * @param {IConfig} args\n   */\n  public static show = (args: IConfig): void => {\n    Toast.instance.current?._open(args);\n  };\n\n  /**\n   *\n   */\n  public static hide = (): void => {\n    Toast.instance.current?._close();\n  };\n\n  /**\n   * @type {React.ContextType<typeof SafeAreaInsetsContext>}\n   */\n  public context!: React.ContextType<typeof SafeAreaInsetsContext>;\n\n  /**\n   * @type {Animated.Value}\n   * @private\n   */\n  private _positionToast: Animated.Value;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  private _cardHeight: number;\n\n  /**\n   * @type {NodeJS.Timeout}\n   * @private\n   */\n  private _timeout?: NodeJS.Timeout;\n\n  /**\n   * @param {IProps} props\n   * @param {React.ContextType<typeof SafeAreaInsetsContext>} context\n   */\n  constructor(props: IProps, context: React.ContextType<typeof SafeAreaInsetsContext>) {\n    super(props, context);\n    this._cardHeight = 0;\n    this._positionToast = new Animated.Value(-500);\n    this.state = {\n      styles: __styles(props.isDark),\n      visible: false,\n      cardHeight: 0,\n    };\n  }\n\n  /**\n   * @param {Readonly<IProps>} prevProps\n   */\n  public componentDidUpdate = (prevProps: Readonly<IProps>): void => {\n    if (prevProps.isDark !== this.props.isDark) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState((prevState) => ({\n        ...prevState,\n        styles: __styles(this.props.isDark),\n      }));\n    }\n  };\n\n  /**\n   * @param {IConfig} args\n   * @return {Promise<void>}\n   */\n  private _open = async (args: IConfig): Promise<void> => {\n    if (this.state.visible) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n      await this._startAnimation(ACTION.CLOSE);\n    }\n    this._positionToast = new Animated.Value(-500);\n    await new Promise<void>((resolve) => this.setState((prevState) => ({ ...prevState, visible: true, config: args }), resolve));\n    await this._startAnimation(ACTION.OPEN);\n\n    const autoClose = this.state.config?.autoClose !== undefined ? this.state.config?.autoClose : this.props.config?.autoClose;\n    if (autoClose || autoClose === undefined) {\n      const duration = typeof autoClose === 'number' ? autoClose : ENV.AUTO_CLOSE;\n      this._timeout = setTimeout(() => this._close(), duration);\n    }\n    this.state.config?.onShow?.();\n  };\n\n  /**\n   * @return {Promise<void>}\n   */\n  private _close = async (): Promise<void> => {\n    await this._startAnimation(ACTION.CLOSE);\n    const onHide = this.state.config?.onShow;\n    await new Promise<void>((resolve) => this.setState((prevState) => ({ ...prevState, visible: false, config: undefined }), resolve));\n    onHide?.();\n  };\n\n  /**\n   * @param {ACTION} action\n   * @return {Promise<void>}\n   */\n  private _startAnimation = (action: ACTION): Promise<void> => {\n    return new Promise((resolve) => {\n      Animated.timing(this._positionToast, {\n        toValue: action === ACTION.OPEN ? this.context?.top ?? 0 : -this._cardHeight,\n        duration: 250,\n        useNativeDriver: true,\n      }).start(() => resolve());\n    });\n  };\n\n  /**\n   * @return {JSX.Element}\n   */\n  private _CardRender = (): JSX.Element => {\n    const { styles } = this.state;\n    if (this.state.config) {\n      const { type, title, textBody, onPress, onLongPress } = this.state.config;\n      return (\n        <Animated.View\n          onLayout={({\n            nativeEvent: {\n              layout: { height },\n            },\n          }) => (this._cardHeight = height)}\n          style={StyleSheet.flatten([styles.cardRow, { transform: [{ translateY: this._positionToast }] }])}\n        >\n          <Pressable style={styles.cardContainer} onPress={onPress} onLongPress={onLongPress}>\n            {type && (\n              <>\n                <View style={styles.backendImage} />\n                <Image source={getImage(type)} resizeMode=\"contain\" style={StyleSheet.flatten([styles.image, styles[`${type}Image`]])} />\n              </>\n            )}\n            {/* eslint-disable-next-line react-native/no-inline-styles */}\n            <View style={{ overflow: 'hidden', flex: 1 }}>\n              {title && <Text style={styles.titleLabel}>{title}</Text>}\n              {textBody && <Text style={styles.descLabel}>{textBody}</Text>}\n            </View>\n          </Pressable>\n        </Animated.View>\n      );\n    }\n    return <></>;\n  };\n\n  /**\n   * @return {JSX.Element}\n   */\n  public render = (): JSX.Element => {\n    const { visible } = this.state;\n    const { _CardRender } = this;\n    if (!visible) {\n      return <></>;\n    }\n    return <_CardRender />;\n  };\n}\n\nconst __styles = (isDark: boolean) =>\n  StyleSheet.create({\n    backgroundContainer: {\n      ...StyleSheet.absoluteFillObject,\n      backgroundColor: '#00000070',\n    },\n\n    container: {\n      position: 'absolute',\n      backgroundColor: '#00000030',\n      top: 0,\n      left: 0,\n      right: 0,\n    },\n\n    cardRow: {\n      zIndex: 9999,\n      position: 'absolute',\n      left: 0,\n      right: 0,\n    },\n\n    cardContainer: {\n      flexDirection: 'row',\n      borderRadius: 12,\n      paddingHorizontal: 12,\n      paddingTop: 12,\n      paddingBottom: 12,\n      marginHorizontal: 12,\n      marginBottom: 12,\n      backgroundColor: Color.get('card', isDark),\n    },\n\n    titleLabel: {\n      fontWeight: 'bold',\n      fontSize: 18,\n      color: Color.get('label', isDark),\n    },\n    descLabel: {\n      color: Color.get('label', isDark),\n    },\n    backendImage: {\n      position: 'absolute',\n      alignSelf: 'center',\n      height: 12,\n      width: 12,\n      backgroundColor: '#FBFBFB',\n      borderRadius: 100,\n      left: 12 + 7,\n    },\n    image: {\n      alignSelf: 'center',\n      width: 25,\n      aspectRatio: 1,\n      marginRight: 12,\n    },\n\n    [`${ALERT_TYPE.SUCCESS}Image`]: {\n      tintColor: Color.get('success', isDark),\n    },\n    [`${ALERT_TYPE.DANGER}Image`]: {\n      tintColor: Color.get('danger', isDark),\n    },\n    [`${ALERT_TYPE.WARNING}Image`]: {\n      tintColor: Color.get('warning', isDark),\n    },\n  });\n\nexport default Toast;\n"]}